# This workflow uses actions that are not certified by GitHub..
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Prod_CD

on:
  push:
    branches: ['prod']

permissions:
  contents: read

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.4.1

      - name: Create .env
        env:
          ENV_NAME: ${{ secrets.ENV_NAME }}
          ENV: ${{ secrets.ENV }}
        run: |
          touch ./$ENV_NAME
          echo "$ENV" > ./$ENV_NAME

      - name: build
        run: |
          yarn add react-scripts
          npm install -save react-scripts --legacy-peer-deps
          CI=false npm run build
        shell: bash

      - name: Docker build and push
        env:
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
          PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          REPO: ${{ secrets.DOCKER_REPO }}
        run: |
          docker login -u $USERNAME -p $PASSWORD
          docker build -t $USERNAME/$REPO:${GITHUB_SHA::7} -t $USERNAME/$REPO:latest .
          docker push $USERNAME/$REPO:${GITHUB_SHA::7}
          docker push $USERNAME/$REPO:latest

      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.4
        env:
          REPO: ${{ secrets.DOCKER_REPO }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_PEM_KEY }}
          proxy_host: ${{ secrets.BASTION_HOST }}
          proxy_username: ubuntu
          proxy_key: ${{ secrets.PUBLIC_PEM_KEY }}
          envs: GITHUB_SHA,REPO
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/$REPO:${GITHUB_SHA::7}
            docker tag ${{ secrets.DOCKER_USERNAME }}/$REPO:${GITHUB_SHA::7} $REPO
            docker stop $REPO
            docker rm $REPO
            docker run -d --name $REPO -p 8180:80 $REPO
